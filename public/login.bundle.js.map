{"version":3,"sources":["webpack:///./client/components/card/index.jsx","webpack:///./client/components/form/UserCardForm.jsx","webpack:///./client/components/form/UserCardFormField.jsx","webpack:///./client/assets/images/undraw_enter.svg","webpack:///./client/routes/login/index.jsx","webpack:///./client/components/button/index.jsx","webpack:///./client/hooks/useEffectOnce.js","webpack:///./utils.js","webpack:///./tailwind.config.js","webpack:///./client/components/input/index.jsx","webpack:///./client/components/fancy-link/index.jsx"],"names":["classes","Card","className","children","rest","join","propTypes","PropTypes","string","node","defaultProps","UserCardForm","header","alt","image","buttonText","underButton","onSubmit","tabIndex","style","width","type","overrideColors","src","isRequired","func","UserCardFormField","label","name","register","errors","useFormContext","htmlFor","id","message","aira-invalid","aira-describedby","ref","oneOfType","shape","current","any","module","exports","Login","form","useForm","history","useHistory","user","setUser","React","useContext","UserContext","useEffectOnce","replace","useCallback","formData","axios","post","then","response","data","token","push","catch","handleRequestValidationError","enterImage","to","handleSubmit","required","Button","variant","classVariants","oneOf","undefined","bool","fn","useEffect","validationResult","require","R","resolveConfig","tailwindConfig","theme","hasProps","curry","props","obj","compose","all","identity","values","pickAll","error","paramErrors","forEachObjIndexed","value","key","setError","msg","inspect","x","console","log","handleValidation","req","res","next","isEmpty","status","json","mapped","variants","textColor","backgroundColor","extend","fontFamily","display","Input","forwardRef","FancyLink"],"mappings":"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","file":"login.bundle.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classes = ['rounded', 'bg-white', 'p-10', 'shadow-lg'];\n\nfunction Card({ className, children, ...rest }) {\n  return (\n    <div className={`${classes.join(' ')} ${className}`} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nCard.defaultProps = {\n  className: '',\n  children: null,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '#/components/button';\nimport Card from '#/components/card';\n\nfunction UserCardForm({\n  header,\n  alt,\n  image,\n  children,\n  buttonText,\n  underButton,\n  onSubmit,\n}) {\n  return (\n    <Card\n      className=\"overflow-x-hidden border-solid border-blue-500 border-t-4\"\n      tabIndex=\"-1\"\n    >\n      <div className=\"flex w-full\">\n        <div style={{ width: 300 }}>\n          <h1 className=\"text-4xl font-light mb-4\">{header}</h1>\n          <form onSubmit={onSubmit}>\n            {children}\n            <Button\n              className=\"w-full bg-blue-700 hover:bg-blue-800 text-gray-100\"\n              type=\"submit\"\n              overrideColors\n            >\n              {buttonText}\n            </Button>\n          </form>\n          <div className=\"mt-3\">{underButton}</div>\n        </div>\n        <div className=\"ml-12 -mr-20\">\n          <img className=\"w-64\" alt={alt} src={image} />\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nUserCardForm.propTypes = {\n  header: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  image: PropTypes.string,\n  children: PropTypes.node,\n  buttonText: PropTypes.string,\n  underButton: PropTypes.node,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nUserCardForm.defaultProps = {\n  buttonText: 'Login',\n  alt: '',\n  image: '',\n  underButton: null,\n  children: [],\n};\n\nexport default UserCardForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormContext } from 'react-hook-form';\nimport Input from '#/components/input';\n\nfunction UserCardFormField({ label, name, type, register }) {\n  const { errors } = useFormContext();\n\n  return (\n    <div>\n      <label htmlFor={`${name}-field`}>\n        <div className=\"flex\">\n          <div className=\"mb-1 uppercase font-bold tracking-wide text-xs text-gray-700\">\n            {label}\n          </div>\n          <div className=\"text-xs text-red-700 ml-auto\" id={`${name}-field-error`}>\n            {errors[name] && errors[name].message}\n          </div>\n        </div>\n        <Input\n          className=\"w-full mb-4\"\n          id={`${name}-field`}\n          name={name}\n          type={type}\n          aira-invalid={errors[name] ? 'true' : 'false'}\n          aira-describedby={`${name}-field-error`}\n          ref={register}\n        />\n      </label>\n    </div>\n  );\n}\n\nUserCardFormField.propTypes = {\n  label: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  register: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]).isRequired,\n};\n\nUserCardFormField.defaultProps = {\n  type: 'text',\n};\n\nexport default UserCardFormField;\n","module.exports = __webpack_public_path__ + \"5d5872dd0b0a3bba1627ba8b9dc8e3e5.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useForm, { FormContext } from 'react-hook-form';\nimport axios from 'axios';\nimport UserCardForm from '#/components/form/UserCardForm';\nimport UserCardFormField from '#/components/form/UserCardFormField';\nimport FancyLink from '#/components/fancy-link';\nimport enterImage from '#/assets/images/undraw_enter.svg';\nimport { UserContext } from '#/Provider';\nimport useEffectOnce from '#/hooks/useEffectOnce';\nimport { handleRequestValidationError } from '#/../utils';\n\nfunction Login() {\n  const form = useForm();\n  const history = useHistory();\n  const [user, setUser] = React.useContext(UserContext);\n\n  useEffectOnce(() => {\n    if (user) {\n      history.replace('/');\n    }\n  });\n\n  const onSubmit = React.useCallback(\n    formData =>\n      axios\n        .post('/api/users/auth', formData)\n        .then(response => response.data)\n        .then(data => setUser({ ...data.user, token: data.token }))\n        .then(() => history.push('/chat'))\n        .catch(handleRequestValidationError(form)),\n    [form, history, setUser],\n  );\n\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      <FormContext {...form}>\n        <UserCardForm\n          header=\"Login\"\n          image={enterImage}\n          alt=\"Woman standing\"\n          underButton={<FancyLink to=\"/register\">Need an account?</FancyLink>}\n          onSubmit={form.handleSubmit(onSubmit)}\n        >\n          <UserCardFormField\n            label=\"Username\"\n            name=\"username\"\n            type=\"text\"\n            register={form.register({ required: 'Username is required' })}\n          />\n          <UserCardFormField\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            register={form.register({ required: 'Password is required' })}\n          />\n        </UserCardForm>\n      </FormContext>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classes = 'rounded focus:shadow-outline cursor-pointer';\nconst colors = 'bg-gray-700 hover:bg-gray-800 text-gray-100';\n\nfunction Button({\n  className,\n  children,\n  type,\n  overrideColors,\n  variant,\n  ...rest\n}) {\n  let classVariants;\n\n  if (variant === 'big') {\n    classVariants = 'px-12 py-4 font-bold shadow-md hover:shadow-lg';\n  } else {\n    classVariants = 'px-4 py-2 shadow hover:shadow-md';\n  }\n\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button\n      className={`\n        ${overrideColors ? '' : colors}\n        ${classes} ${classVariants} ${className}\n      `}\n      type={type}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  variant: PropTypes.oneOf(['big', undefined]),\n  overrideColors: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  className: '',\n  children: null,\n  type: 'button',\n  variant: undefined,\n  overrideColors: false,\n};\n\nexport default Button;\n","import React from 'react';\n\n// useEffect, but only on mount\nfunction useEffectOnce(fn) {\n  React.useEffect(fn, []);\n  return null;\n}\n\nexport default useEffectOnce;\n","const { validationResult } = require('express-validator');\nconst R = require('ramda');\n// https://tailwindcss.com/docs/configuration/#referencing-in-javascript\nconst resolveConfig = require('tailwindcss/resolveConfig');\nconst tailwindConfig = require('./tailwind.config');\n\nconst { theme } = resolveConfig(tailwindConfig);\n\n/*\n  console.log, but it returns the value that was passed in. This\n  function is useful for inspecting the value in a promise chain, or\n  when composing functions.\n\n  usage:\n    Promise.resolve(5)\n      .then(inspect) // prints 5\n      .then(five => doSomething(five))\n      .then(inspect) // prints return value of doSomething\n*/\nfunction inspect(x) {\n  console.log(x); // eslint-disable-line no-console\n  return x;\n}\n\n/*\n  check if an object has a value for every key passed in.\n\n  usage:\n    hasProps(['foo', 'bar'], { foo: 10, bar: 20 }) === true\n    hasProps(['foo', 'bar'], { bar: 20, baz: 30 }) === false\n*/\nconst hasProps = R.curry((props, obj) =>\n  R.compose(R.all(R.identity), R.values, R.pickAll(props))(obj),\n);\n\n// middleware for express validation\n// any validation errors are sent to client\nfunction handleValidation(req, res, next) {\n  const errors = validationResult(req);\n\n  if (errors.isEmpty()) {\n    next();\n  } else {\n    res.status(400).json({ errors: errors.mapped() });\n  }\n}\n\nconst handleRequestValidationError = R.curry((form, error) => {\n  const paramErrors = error.response.data.errors;\n\n  if (!paramErrors) {\n    throw error;\n  }\n\n  R.forEachObjIndexed((value, key) => {\n    form.setError(key, 'paramError', value && value.msg);\n  }, paramErrors);\n});\n\nmodule.exports = {\n  theme,\n  inspect,\n  hasProps,\n  handleValidation,\n  handleRequestValidationError,\n};\n","module.exports = {\n  // example from: https://tailwindcss.com/docs/configuring-variants/\n  variants: {\n    textColor: ['responsive', 'hover', 'focus', 'group-hover'],\n    backgroundColor: ['responsive', 'hover', 'focus', 'group-hover'],\n  },\n  theme: {\n    extend: {\n      fontFamily: {\n        display: ['Raleway', 'sans-serif'],\n      },\n    },\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classes = [\n  'rounded-lg',\n  'bg-gray-200',\n  'px-3',\n  'py-2',\n  'border',\n  'border-solid',\n  'border-transparent',\n  'outline-none',\n].join(' ');\nconst focused = 'focus:bg-white focus:border-gray-400';\nconst hovered = 'hover:border-gray-400';\n\nconst Input = React.forwardRef(({ className, ...rest }, ref) => (\n  <input\n    className={`${classes} ${hovered} ${focused} ${className}`}\n    ref={ref}\n    {...rest}\n  />\n));\n\nInput.propTypes = {\n  className: PropTypes.string,\n};\n\nInput.defaultProps = {\n  className: '',\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst linkTextClasses =\n  'relative text-blue-800 group-hover:text-blue-900 z-50';\n\nfunction FancyLink({ to, className, children }) {\n  return (\n    <RouterLink className=\"group relative\" to={to}>\n      <span className={`${linkTextClasses} ${className}`}>{children}</span>\n      <div className=\"absolute w-full bottom-0 bg-blue-200 group-hover:bg-blue-300 h-1\" />\n    </RouterLink>\n  );\n}\n\nFancyLink.propTypes = {\n  to: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nFancyLink.defaultProps = {\n  to: '#',\n  className: '',\n  children: null,\n};\n\nexport default FancyLink;\n"],"sourceRoot":""}